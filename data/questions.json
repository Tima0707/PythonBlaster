{
  "questions": [
    {
      "question": "Что выведет этот код: print('Hello' + 'World')?",
      "options": ["HelloWorld", "Hello World", "Hello+World", "Ошибка"],
      "correct": 0,
      "explanation": "В Python оператор + для строк выполняет конкатенацию (объединение) строк."
    },
    {
      "question": "Сколько мегабайт в гигабайте?",
      "options": ["100", "1024", "1000", "8"],
      "correct": 1,
      "explanation": "В информатике 1 гигабайт = 1024 мегабайта (2^10)."
    },
    {
      "question": "Что вернёт выражение [x*2 for x in range(3)]?",
      "options": ["[0, 2, 4]", "[2, 4, 6]", "[0, 1, 2]", "Ошибка"],
      "correct": 0,
      "explanation": "Генератор списка создает список [0*2, 1*2, 2*2] = [0, 2, 4]."
    },
    {
      "question": "Переведите число 255 в шестнадцатеричную систему:",
      "options": ["FF", "FE", "100", "255"],
      "correct": 0,
      "explanation": "255 в десятичной = FF в шестнадцатеричной (15*16 + 15 = 255)."
    },
    {
      "question": "Чему равно выражение not (True and False)?",
      "options": ["True", "False", "None", "Ошибка"],
      "correct": 0,
      "explanation": "Сначала вычисляется True and False = False, затем not False = True."
    },
    {
      "question": "Какая временная сложность у алгоритма пузырьковой сортировки?",
      "options": ["O(n)", "O(n log n)", "O(n²)", "O(log n)"],
      "correct": 2,
      "explanation": "Пузырьковая сортировка имеет временную сложность O(n²) в худшем и среднем случае."
    },
    {
      "question": "Что такое IP-адрес?",
      "options": ["Уникальный идентификатор устройства в сети", "Протокол передачи данных", "Тип шифрования", "Язык программирования"],
      "correct": 0,
      "explanation": "IP-адрес — это уникальный идентификатор устройства в компьютерной сети."
    },
    {
    "question": "Какое имя переменной корректно по правилам Python?",
    "options": ["_value", "1value", "value!", "value-2"],
    "correct": 0,
    "explanation": "Имя может начинаться с буквы или подчёркивания и содержать буквы, цифры и _. '_value' подходит; остальные — нет."
    },
    {
    "question": "Что выведет код: x, y = 1, 2; print(x, y)?",
    "options": ["1 2", "2 1", "(1, 2)", "[1, 2]"],
    "correct": 0,
    "explanation": "Множественное присваивание распределяет значения по порядку: x=1, y=2."
    },
    {
    "question": "Что вернёт len('0123')?",
    "options": ["4", "3", "5", "Ошибка"],
    "correct": 0,
    "explanation": "Длина строки из четырёх символов равна 4."
    },
    {
    "question": "Чему равен результат max([1, 5, 2])?",
    "options": ["5", "2", "1", "None"],
    "correct": 0,
    "explanation": "max возвращает наибольший элемент итерируемого объекта."
    },
    {
    "question": "Что вернёт sorted([3, 1, 2], reverse=True)?",
    "options": ["[3, 2, 1]", "[1, 2, 3]", "[2, 3, 1]", "None"],
    "correct": 0,
    "explanation": "Сортировка по убыванию для списка [3,1,2] даёт [3,2,1]."
    },
    {
    "question": "Какой индекс в Python обращается к последнему символу строки s?",
    "options": ["-1", "len(s)", "0", "1"],
    "correct": 0,
    "explanation": "Отрицательные индексы считают с конца: -1 — последний элемент."
    },
    {
    "question": "Чему равен 'abcde'[1:4]?",
    "options": ["'bcd'", "'abc'", "'abcd'", "'bcde'"],
    "correct": 0,
    "explanation": "Срез берёт символы с индекса 1 включительно до 4 невключительно: 'bcd'."
    },
    {
    "question": "Что выведет: s = 'python'; print(s[-3])",
    "options": ["'h'", "'t'", "'o'", "'n'"],
    "correct": 0,
    "explanation": "s = 'p y t h o n'; -1→'n', -2→'o', -3→'h'."
    },
    {
    "question": "Где корректное ветвление if/elif/else?",
    "options": ["if x>0: ... elif x==0: ... else: ...", "if x>0: ... else if x==0: ... else: ...", "if x>0: ... elif: ... else: ...", "if x>0 then ..."],
    "correct": 0,
    "explanation": "В Python используется elif, а не 'else if'; после elif нужно условие."
    },
    {
    "question": "Что верно про цикл for в Python?",
    "options": ["Итерирует по элементам последовательности", "Всегда работает как цикл с условием", "Нельзя использовать с range()", "Требует явного счётчика i++"],
    "correct": 0,
    "explanation": "for перебирает элементы итерируемого объекта (в том числе range). Оператора i++ нет."
    },
    {
    "question": "Что делает цикл while?",
    "options": ["Повторяет блок, пока условие истинно", "Перебирает коллекцию по индексам", "Сортирует данные", "Инициализирует переменные"],
    "correct": 0,
    "explanation": "while — универсальный цикл с произвольным условием."
    },
    {
    "question": "Что напечатает код: for c in 'abc': print(c, end='')",
    "options": ["abc", "a b c", "['a','b','c']", "Ошибка"],
    "correct": 0,
    "explanation": "Перебор символов строки; end='' убирает переносы."
    },
    {
    "question": "Что вернёт выражение bool(0)?",
    "options": ["False", "True", "0", "1"],
    "correct": 0,
    "explanation": "Ноль приводится к False, ненулевые числа — к True."
    },
    {
    "question": "Какой тип имеет 3.0?",
    "options": ["float", "int", "str", "bool"],
    "correct": 0,
    "explanation": "Числа с точкой — тип float."
    },
    {
    "question": "Какая операция приводит к строке '10'?",
    "options": ["str(10)", "int('10')", "float('10')", "bool(10)"],
    "correct": 0,
    "explanation": "str(10) даёт строковое представление числа 10."
    },
    {
    "question": "Что вернёт int('1011', 2)?",
    "options": ["11", "13", "1011", "Ошибка"],
    "correct": 0,
    "explanation": "Двоичное 1011 = 11 в десятичной (8+2+1)."
    },
    {
    "question": "Как получить двоичную запись числа 13 встроенной функцией?",
    "options": ["bin(13)", "hex(13)", "oct(13)", "format(13, 'd')"],
    "correct": 0,
    "explanation": "bin даёт строку вида '0b1101'."
    },
    {
    "question": "Что вернёт len([])?",
    "options": ["0", "1", "None", "Ошибка"],
    "correct": 0,
    "explanation": "Пустой список имеет длину 0."
    },
    {
    "question": "Какой срез даёт каждый второй символ строки s?",
    "options": ["s[::2]", "s[2:]", "s[:2]", "s[1:2]"],
    "correct": 0,
    "explanation": "s[начало:конец:шаг], шаг 2 — каждый второй символ."
    },
    {
    "question": "Где корректно объединены условия?",
    "options": ["if a>0 and b>0:", "if a>0 && b>0:", "if a>0 AND b>0:", "if (a>0, b>0):"],
    "correct": 0,
    "explanation": "Логические операторы: and, or, not; '&&' и 'AND' в Python не используются."
    },
    {
    "question": "Что выведет: s='12345'; print(s[-2:])",
    "options": ["'45'", "'34'", "'5'", "'2345'"],
    "correct": 0,
    "explanation": "Срез от -2 до конца: последние два символа '45'."
    },
    {
    "question": "Какой вызов отсортирует список чисел по убыванию?",
    "options": ["sorted(nums, reverse=True)", "sorted(nums, key=str)", "nums.sort(key=len)", "sorted(nums, reverse='desc')"],
    "correct": 0,
    "explanation": "reverse=True включает обратный порядок."
    },
    {
    "question": "Как получить максимум по ключу длины строк в списке strs?",
    "options": ["max(strs, key=len)", "max(len, strs)", "max(strs, len)", "max(key=strs, len)"],
    "correct": 0,
    "explanation": "max(iterable, key=функция) — стандартный приём."
    },
    {
    "question": "Что вернёт тип выражения type(True)?",
    "options": ["<class 'bool'>", "<class 'int'>", "<class 'str'>", "<class 'True'>"],
    "correct": 0,
    "explanation": "True — логическое значение типа bool."
    },
    {
    "question": "Какое утверждение верно о строках в Python?",
    "options": ["Строки неизменяемы", "Строки изменяемы", "К строке нельзя применять индексацию", "Строка — это число"],
    "correct": 0,
    "explanation": "str — неизменяемый тип; индексация допустима, но менять символ по индексу нельзя."
    },
    {
    "question": "Как корректно дописать символ 'X' в конец строки s?",
    "options": ["s = s + 'X'", "s.append('X')", "s[-1] = 'X'", "push(s, 'X')"],
    "correct": 0,
    "explanation": "Строки неизменяемы, поэтому создаём новую: s = s + 'X'."
    },
    {
    "question": "Чему равно 'abcdef'[:: -1] ?",
    "options": ["'fedcba'", "'abcdef'", "'bcdefa'", "Ошибка"],
    "correct": 0,
    "explanation": "Срез с шагом -1 разворачивает строку."
    },
    {
    "question": "Что вернёт выражение int('FF', 16)?",
    "options": ["255", "256", "15", "Ошибка"],
    "correct": 0,
    "explanation": "Шестнадцатеричное FF = 255 (1516 + 15)."
    },
    {
    "question": "Что делает выражение hex(255)?",
    "options": ["Возвращает строку '0xff'", "Возвращает 'FF'", "Возвращает 255", "Меняет число на месте"],
    "correct": 0,
    "explanation": "hex возвращает строку с префиксом '0x' в нижнем регистре."
    },
    {
    "question": "Как получить восьмеричную запись числа 64?",
    "options": ["oct(64)", "bin(64)", "hex(64)", "format(64, 'd')"],
    "correct": 0,
    "explanation": "oct даёт строку вида '0o100'."
    },
    {
    "question": "Что выведет код: for i in range(3): print(i, end=' ')?",
    "options": ["0 1 2 ", "1 2 3 ", "0 1 2 3 ", "3 2 1 "],
    "correct": 0,
    "explanation": "range(3) даёт 0,1,2."
    },
    {
    "question": "Что делает оператор else у if?",
    "options": ["Выполняет блок при ложном условии", "Начинает новый if", "Повторяет блок несколько раз", "Останавливает программу"],
    "correct": 0,
    "explanation": "else выполняется, если все предыдущие условия оказались ложными."
    },
    {
    "question": "Какая строка корректно преобразует вход из input() к int?",
    "options": ["n = int(input())", "n = input(int)", "int = input()", "n = input().int()"],
    "correct": 0,
    "explanation": "input() возвращает строку, её нужно обернуть в int(...)."
    },
    {
    "question": "Что вернёт выражение 'hello'[0]?",
    "options": ["'h'", "'o'", "'e'", "Ошибка"],
    "correct": 0,
    "explanation": "Индексация с нуля: первый символ — 'h'."
    },
    {
    "question": "Какое выражение вернёт количество элементов словаря d?",
    "options": ["len(d)", "d.len()", "count(d)", "size(d)"],
    "correct": 0,
    "explanation": "len работает с коллекциями, включая словари."
    },
    {
    "question": "Где корректная вложенная конструкция?",
    "options": [
    "if x>0:\n if y>0:\n print('I четверть')",
    "if x>0:\nprint('ok')",
    "if x>0:\n elif y>0:\n print('ok')",
    "if x>0 then if y>0:"
    ],
    "correct": 0,
    "explanation": "Вложенность достигается отступами; второй вариант ломает отступы, третий — синтаксически неверен, четвёртый не на Python."
    },
      {
      "question": "Что вернёт min('b', 'a', 'c')?",
      "options": ["'a'", "'b'", "'c'", "Ошибка"],
      "correct": 0,
      "explanation": "Строки сравниваются лексикографически; минимум — 'a'."
      },
    {
    "question": "Что вернёт sorted('cab')?",
    "options": ["['a', 'b', 'c']", "['c', 'a', 'b']", "'abc'", "('a','b','c')"],
    "correct": 0,
    "explanation": "sorted возвращает список отсортированных символов."
    },
    {
    "question": "Как получить последний элемент списка a безопасно, если он не пуст?",
    "options": ["a[-1]", "a[len(a)]", "a.last()", "last(a)"],
    "correct": 0,
    "explanation": "Отрицательные индексы: -1 — последний; len(a) — вне диапазона."
    },
    {
    "question": "Что вернёт выражение type(3) is int?",
    "options": ["True", "False", "int", "Ошибка"],
    "correct": 0,
    "explanation": "3 имеет тип int."
    },
    {
    "question": "Что напечатает цикл while при n=3?\n\nn=3\nwhile n>0:\n print(n)\n n -= 1",
    "options": ["3\n2\n1", "1\n2\n3", "3\n2", "Бесконечный цикл"],
    "correct": 0,
    "explanation": "n последовательно 3,2,1; затем условие становится ложным."
    },
    {
    "question": "Как корректно преобразовать число 10 в строку и добавить к началу 'ID-'?",
    "options": ["s = 'ID-' + str(10)", "s = 'ID-'.append(10)", "s = 'ID-' + 10", "s = str('ID-') + 10"],
    "correct": 0,
    "explanation": "Нужно привести число к строке и конкатенировать."
    },
    {
    "question": "Как получить десятичное значение из строки '0b1010'?",
    "options": ["int('1010', 2)", "bin('1010')", "int('0b1010')", "int(1010, 2)"],
    "correct": 0,
    "explanation": "Нужно передать цифры и основание: int('1010', 2) = 10."
    },
    {
    "question": "Что вернёт выражение 'python'[1:-1]?",
    "options": ["'ytho'", "'python'", "'pytho'", "'ython'"],
    "correct": 0,
    "explanation": "Срез без первого и последнего символа: 'ytho'."
    },
    {
    "question": "Результат: len(sorted({3,1,2}))?",
    "options": ["3", "2", "Ошибка", "None"],
    "correct": 0,
    "explanation": "Множество из трёх уникальных чисел сортируется в список длины 3."
    },
    {
    "question": "Чему равно sum(range(1,5))?",
    "options": ["10", "15", "5", "9"],
    "correct": 0,
    "explanation": "1+2+3+4=10."
    },
    {
    "question": "Где корректное комбинированное условие диапазона?",
    "options": ["if 0 <= x < 10:", "if x>=0 and <10:", "if x in 0..10:", "if between(x,0,10):"],
    "correct": 0,
    "explanation": "Python поддерживает цепочки сравнений: 0 <= x < 10."
    },
    {
    "question": "Что вернёт 'abc' * 2?",
    "options": ["'abcabc'", "'aabbcc'", "['abc','abc']", "Ошибка"],
    "correct": 0,
    "explanation": "Оператор * повторяет строку."
    },
    {
    "question": "Какой вызов вернёт отсортированный по длине список строк strs (по возрастанию)?",
    "options": ["sorted(strs, key=len)", "sorted(strs, reverse=True)", "sorted(len, key=strs)", "strs.sort(key=str)"],
    "correct": 0,
    "explanation": "key=len сортирует по длине элементов."
    },
    {
    "question": "Что вернёт int('77', 8)?",
    "options": ["63", "77", "64", "7"],
    "correct": 0,
    "explanation": "Восьмеричное 77 = 78+7 = 63."
    },
    {
    "question": "Как получить целую часть деления 7 на 3?",
    "options": ["7 // 3", "int(7/3.0)", "7 % 3", "div(7,3)"],
    "correct": 0,
    "explanation": "// — целочисленное деление."
    },
    {
    "question": "Какая строка корректно увеличит переменную x на 1?",
    "options": ["x += 1", "x =+ 1", "++x", "x++"],
    "correct": 0,
    "explanation": "Оператора ++ в Python нет; используется x += 1."
    },
    {
    "question": "Как сгенерировать диапазон чётных чисел 0..8 включительно?",
    "options": ["range(0, 9, 2)", "range(0, 8, 2)", "range(2, 10, 2)", "range(0, 10)"],
    "correct": 0,
    "explanation": "В range верхняя граница не включается: 0,2,4,6,8."
    },
    {
    "question": "Что вернёт выражение list('ab')?",
    "options": ["['a', 'b']", "('a', 'b')", "['ab']", "Ошибка"],
    "correct": 0,
    "explanation": "Строка итерируема по символам; список из символов."
    },
    {
    "question": "Как получить шестнадцатеричную строку без префикса у числа n?",
    "options": ["format(n, 'x')", "hex(n).strip('0x')", "str(n, 16)", "tohex(n)"],
    "correct": 0,
    "explanation": "format(n, 'x') возвращает строку без '0x'."
    },
    {
    "question": "Что напечатает код?\n\ns='0123456'\nprint(s[::3])",
    "options": ["'036'", "'0246'", "'123'", "'056'"],
    "correct": 0,
    "explanation": "Шаг 3: индексы 0,3,6 → '0','3','6'."
    },
    {
    "question": "Как проверить, что строка s не пуста в if?",
    "options": ["if s:", "if len(s) >= 0:", "if s != None:", "if s is not False:"],
    "correct": 0,
    "explanation": "Пустая строка приводится к False, непустая — к True."
    },
    {
    "question": "Где синтаксически верный while с выходом по break?",
    "options": [
    "while True:\n x = input()\n if x == 'stop':\n break",
    "while (True)\n break",
    "while True:\n break else:\n pass",
    "while:\n break"
    ],
    "correct": 0,
    "explanation": "Первый вариант корректен; остальные — синтаксические ошибки."
    },
    {
    "question": "Что вернёт выражение '123' + '45'?",
    "options": ["'12345'", "168", "'123 45'", "Ошибка"],
    "correct": 0,
    "explanation": "Для строк '+' — конкатенация."
    },
    {
    "question": "Что напечатает код: print(int(3.9))?",
    "options": ["3", "4", "3.9", "Ошибка"],
    "correct": 0,
    "explanation": "int обрезает дробную часть (не округляет): 3."
    },
    {
    "question": "Как получить третий элемент кортежа t?",
    "options": ["t[2]", "t(3)", "t.get(2)", "t[-0]"],
    "correct": 0,
    "explanation": "Индексация с нуля: третий элемент — индекс 2."
    },
    {
    "question": "Что верно про неизменяемые объекты?",
    "options": ["Попытка изменить по индексу вызывает ошибку", "Их нельзя копировать", "Их длина всегда 1", "Они не поддерживают операции"],
    "correct": 0,
    "explanation": "str, tuple — неизменяемые; присвоение по индексу недопустимо."
    },
    {
    "question": "Что выведет: print('hello'.upper())?",
    "options": ["'HELLO'", "'Hello'", "'hello '", "None"],
    "correct": 0,
    "explanation": "Метод строки возвращает новую строку в верхнем регистре."
    },
    {
    "question": "Результат: int('1A', 16) ?",
    "options": ["26", "27", "1A", "Ошибка"],
    "correct": 0,
    "explanation": "1A (16-ричная) = 116 + 10 = 26."
    },
    {
    "question": "Что вернёт 'abcdef'[:3] + 'abcdef'[3:]?",
    "options": ["'abcdef'", "'abcabc'", "'defabcdef'", "'abc'"],
    "correct": 0,
    "explanation": "Сумма срезов, покрывающих всю строку, даёт исходную строку."
    },
    {
    "question": "Где корректная конструкция вложенных if/else?",
    "options": [
    "if a>0:\n if b>0:\n print('++')\n else:\n print('+-')",
    "if a>0:\nelse:\n if b>0:",
    "if a>0:\n elif b>0:\n pass",
    "if a>0 then if b>0:"
    ],
    "correct": 0,
    "explanation": "Первый вариант корректен по отступам и синтаксису."
    },
    {
    "question": "Как получить количество чётных чисел в списке nums с помощью sum?",
    "options": ["sum(1 for x in nums if x % 2 == 0)", "sum(nums % 2 == 0)", "len(sum(nums))", "count(nums, even=True)"],
    "correct": 0,
    "explanation": "Генератор 1/0 суммируется для подсчёта."
    },
    {
    "question": "Чему равен результат: list(range(2, 7))?",
    "options": ["[2, 3, 4, 5, 6]", "[2, 3, 4, 5, 6, 7]", "[1, 2, 3, 4, 5, 6]", "[]"],
    "correct": 0,
    "explanation": "Верхняя граница не включается."
    },
    {
    "question": "Как получить символ по индексу i со встроенной проверкой границ без исключения?",
    "options": ["s[i] если 0 <= i < len(s)", "s.get(i)", "safe_index(s,i)", "s[i] всегда безопасно"],
    "correct": 0,
    "explanation": "Нужно проверить диапазон вручную; встроенной безопасной индексации нет."
    },
    {
    "question": "Что выведет:\n\nx = 5\nif x:\n print('yes')\nelse:\n print('no')",
    "options": ["yes", "no", "Ошибка", "5"],
    "correct": 0,
    "explanation": "Ненулевое число приводится к True."
    },
    {
    "question": "Как перевести десятичное число 255 в шестнадцатеричную без префикса?",
    "options": ["format(255, 'X')", "hex(255)", "str(255, 16)", "tohex(255)"],
    "correct": 0,
    "explanation": "format с 'X' выдаёт 'FF' (верхний регистр)."
    },
    {
    "question": "Как из строки 'FF' получить десятичное число 255?",
    "options": ["int('FF', 16)", "hex('FF')", "int('FF')", "int(16, 'FF')"],
    "correct": 0,
    "explanation": "int принимает строку и основание."
    },
    {
    "question": "Какая операция создаёт новую строку с добавлением символа в начало?",
    "options": ["s = 'X' + s", "s.prepend('X')", "s.insert(0,'X')", "s[0] = 'X'+s[0]"],
    "correct": 0,
    "explanation": "Строки неизменяемы; создаём новое значение конкатенацией."
    },
    {
    "question": "Что вернёт выражение any([False, 0, '', 5])?",
    "options": ["True", "False", "5", "Ошибка"],
    "correct": 0,
    "explanation": "any возвращает True, если есть хотя бы одно истинное значение (5 → True)."
    },
    {
    "question": "Что вернёт выражение all([1, True, 'x'])?",
    "options": ["True", "False", "Ошибка", "None"],
    "correct": 0,
    "explanation": "Все элементы истинны — all возвращает True."
    },
    {
    "question": "Как получить отсортированный по убыванию уникальный набор символов строки s?",
    "options": ["sorted(set(s), reverse=True)", "set(sorted(s, reverse=True))", "unique(sorted(s), desc=True)", "sort(set(s), reverse=True)"],
    "correct": 0,
    "explanation": "set убирает повторы, sorted сортирует, reverse=True — по убыванию."
    },
    {
    "question": "Что вернёт выражение 'ab' in 'cabd'?",
    "options": ["True", "False", "None", "Ошибка"],
    "correct": 0,
    "explanation": "Подстрока 'ab' встречается в 'cabd'."
    },
    {
    "question": "Как из числа 42 получить строку '101010' без префикса?",
    "options": ["format(42, 'b')", "bin(42)", "str(42, 2)", "toBin(42)"],
    "correct": 0,
    "explanation": "format с шаблоном 'b' — двоичное без '0b'."
    },
    {
    "question": "Как получить число из двоичной строки без префикса '0b'?",
    "options": ["int(s, 2)", "int(s)", "bin(int(s))", "int('0b'+s)"],
    "correct": 0,
    "explanation": "int принимает основание системы счисления."
    },
    {
    "question": "Чему равно выражение len(sorted('bbaa'))?",
    "options": ["4", "3", "2", "Ошибка"],
    "correct": 0,
    "explanation": "sorted возвращает список длиной, равной исходному количеству символов."
    },
    {
    "question": "Что вернёт 'ABCDE'[::2]?",
    "options": ["'ACE'", "'BDF'", "'ABCDE'", "'A'"],
    "correct": 0,
    "explanation": "Шаг 2 берёт индексы 0,2,4 → 'A','C','E'."
    },
    {
    "question": "Где корректная проверка чётности числа n?",
    "options": ["if n % 2 == 0:", "if n // 2 == 0:", "if even(n):", "if n % 2 = 0:"],
    "correct": 0,
    "explanation": "Остаток от деления на 2 равен 0 для чётных чисел."
    },
    {
    "question": "Что сделает конструкция break в цикле?",
    "options": ["Прервёт текущий цикл", "Пропустит одну итерацию", "Завершит программу", "Ничего"],
    "correct": 0,
    "explanation": "break немедленно завершает ближайший цикл."
    },
    {
    "question": "Что делает continue?",
    "options": ["Переходит к следующей итерации цикла", "Завершает цикл", "Пауза выполнения", "Пропускает блок else"],
    "correct": 0,
    "explanation": "continue пропускает оставшийся код итерации."
    },
    {
    "question": "Что вернёт выражение max('apple', 'banana', key=len)?",
    "options": ["'banana'", "'apple'", "'ple'", "6"],
    "correct": 0,
    "explanation": "По длине строк максимум — 'banana' (6 символов)."
    },
    {
    "question": "Как получить число 64 из строки восьмеричной записи без префикса '0o'?",
    "options": ["int('100', 8)", "int('0o100')", "oct('100')", "int('100')"],
    "correct": 0,
    "explanation": "int('100', 8) = 64."
    },
    {
    "question": "Переведите число 255 в шестнадцатеричную систему:",
    "options": ["FF", "FE", "100", "255"],
    "correct": 0,
    "explanation": "255 в десятичной = FF в шестнадцатеричной (1516 + 15 = 255)."
    },
    {
    "question": "Что выведет: print(len(sorted({1,2,2,3})))?",
    "options": ["3", "4", "2", "1"],
    "correct": 0,
    "explanation": "Множество удаляет дубликаты: {1,2,3} → длина 3 после сортировки."
    },
    {
    "question": "Чему равно 'hello'[1:4:2]?",
    "options": ["'el'", "'hl'", "'he'", "'lo'"],
    "correct": 0,
    "explanation": "С индекса 1 до 4 (не включая), шаг 2 → 'e','l'."
    },
    {
    "question": "Какой вызов создаст копию строки s с добавлением числа n в конец (как текста)?",
    "options": ["s + str(n)", "s.append(n)", "s += n # всегда безопасно", "concat(s, n)"],
    "correct": 0,
    "explanation": "Нужно привести n к строке и конкатенировать."
    },
    {
    "question": "Что вернёт выражение sum([True, False, True])?",
    "options": ["2", "3", "1", "True"],
    "correct": 0,
    "explanation": "True считается как 1, False — 0; 1+0+1=2."
    },
    {
    "question": "Какой результат у выражения 'PY'.lower() + 'thon'?",
    "options": ["'python'", "'PYthon'", "'pyTHON'", "'py thon'"],
    "correct": 0,
    "explanation": "lower() переводит в нижний регистр: 'py' + 'thon' = 'python'."
    },
    {
    "question": "Как корректно преобразовать строку '10' в число и прибавить 5?",
    "options": ["int('10') + 5", "'10' + 5", "toint('10') + 5", "int + 5"],
    "correct": 0,
    "explanation": "int('10') → 10; 10 + 5 = 15."
    },
    {
    "question": "Как получить третью с конца букву строки s?",
    "options": ["s[-3]", "s[len(s)-3]", "s[3]", "s[-2]"],
    "correct": 0,
    "explanation": "Отрицательный индекс -3 — третий элемент с конца."
    },
    {
    "question": "Что вернёт выражение sorted([10,2,1], key=str)?",
    "options": ["[1, 10, 2]", "[1, 2, 10]", "[10, 2, 1]", "[2, 10, 1]"],
    "correct": 0,
    "explanation": "Сортировка по строковому представлению: '1','10','2' → 1,10,2."
    },
    {
    "question": "Какое имя переменной некорректно?",
    "options": ["class", "_data", "value2", "VAL_2"],
    "correct": 0,
    "explanation": "'class' — ключевое слово, его нельзя использовать как имя переменной."
    },
    {
    "question": "Что выведет код: s='ab'; s += 'c'; print(s)?",
    "options": ["'abc'", "'ab c'", "'ab'", "Ошибка"],
    "correct": 0,
    "explanation": "Оператор += для строк создаёт новую строку: 'abc'."
    },
    {
    "question": "Как получить количество цифр в десятичной записи числа n (n>=0) без циклов?",
    "options": ["len(str(n))", "int(n).len()", "digits(n)", "count(n)"],
    "correct": 0,
    "explanation": "str(n) даёт строку, len — её длину."
    },
    {
      "correct": 0,
      "explanation": "Шаг -2 от 5 (исключая 0): 5,3,1.",
      "options": [
        "[5, 3, 1]",
        "[5, 4, 3, 2, 1]",
        "[4, 2, 0]",
        "[]"
      ],
      "question": "Что вернёт выражение list(range(5, 0, -2))?"
    }
  ]
}
